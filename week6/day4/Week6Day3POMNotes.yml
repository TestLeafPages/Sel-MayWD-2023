Today's Agenda:
    - 9:30 - 10:30 -> PageObjectModel Introduction
    - 10:30 - 11:00 -> Sequential Execution
    - 11:00 - 11:30 -> Breakout
    - 11:30 - 12:15 -> Parallel Execution
    - 12:15 - 12:30 -> Breakout

Steps to implement PageObjectModel:
1. Create new Project and copy all the dependencies from the previous project and paste it in under the new project pom.xml
2. Create separate packages 
      - base 
         -ProjectSpecificMethods(BaseClass)   
      - pages
         - LoginPage    
         - WelcomePage
         - MyHomePage
         - MyLeadsPage
         - CreateLeadPage
         - ViewLeadsPage
      - testcases
          - VerifyLogin   
     Note: ALl the classes under pages package and testcases package should extend ProjectSpecificMethods 

3. Create methods for each action in each pages
   -LoginPage(3 actions)
      enterUsername()
         return this;
        -add return statement depending on the navigation
        - add return this to stay in the samepage
        - add return new WElcomePage()if it navigates to another page
      enterPassword()
       return this;
      clickLoginButton()
      return new WElcomePage();

   -WelcomePage(1 action)  
      verifyHomePage() 
        return this;
      clickCRMSFALink()
        return new MyHomePage();

   -MyHomePage(1 action)     
      clickLeadsLink()
        return new MyLeadsPage();

   -MyLeadsPage(3 actions)
       clickCreateLeadLink
         return new CreateLeadPage();

   -CreateLeadPage(4 actions)
       enterCompanyname()
          return this;
       enterFirstname()
         return this;
       enterLastname()
          return this;
       clickSubmitButton
          return new ViewLeadsPage();

   -ViewLeadsPage()
       verifyViewLeads  
         return this;  
   
            
 4. Create a class called VerifyLogin under testcases package 
       - create a method runLogin() and annotate with @Test for execution
       - call all the method by creating object for Loginpage      
Steps for parallel execution:
  1.Remove static keyword from the baseclass
  2.Create parameterized constructor in each pages
     public LoginPage(ChromeDriver driver){
      this.driver=driver;
     }
  3.Pass driver in each constructor call in pages as well as testcases
  4.Finally,run from xml file   
